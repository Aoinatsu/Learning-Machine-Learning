from numpy import genfromtxt,zeros,pi,e,sqrt

class GaussianNB():
    MyClasses = []
    FeatureCount = 0
    EtaAndSigma = []
    #初始化############################################################
    def __init__(self,data,target):
        self.data = data
        self.target = target
        self.GetClassEnum()#得到分类枚举
        self.FeatureCount = data.shape[1]#得到特征的总数
        self.GetAllEtaAndSigma()#得到各个种类的每个特征的均值和标准差
    def IsAlreadyInClasses(self,tc):#是否已经添加到种类列表之中
        for c in self.MyClasses:
            if tc == c:
                return True
        return False
    def GetClassEnum(self):#得到分类枚举 
        for t in self.target:               
            if not self.IsAlreadyInClasses(t):
                self.MyClasses.append(t)
    def GetAllEtaAndSigma(self):#得到各个种类的每个特征的均值和标准差
        for c in self.MyClasses:
            features = []
            for i in range(0,self.FeatureCount):
                features.append([self.GetEta(self.data[self.target==c,i]),self.GetSigma(self.data[self.target==c,i])])
            self.EtaAndSigma.append(features)
    #得到结果##########################################################
    def Result(self,unit):
        Pcs = []
        for c in self.MyClasses:
            Pc = 1
            for i in range(0,self.FeatureCount):
                Pc *= self.GaussianDistribution(unit[i],self.EtaAndSigma[self.MyClasses.index(c)][i][0],self.EtaAndSigma[self.MyClasses.index(c)][i][1])
            Pcs.append(Pc)
        return [self.MyClasses[Pcs.index(max(Pcs))],max(Pcs)]
    #公式##############################################################
    def GaussianDistribution(self,x,eta,sigma):#高斯分布概率密度函数
        return (1/(sqrt(2*pi)*sigma))*e**(-((x-eta)**2)/(2*sigma**2))
    def GetEta(self,data):#得到数据的均值
        return sum(data)/len(data)
    def GetSigma(self,data):#得到数据的标准差
        eta = sum(data)/len(data)
        return sqrt(sum([(d - eta)**2 for d in data])/len(data))
    ###################################################################
if __name__ == '__main__':
    #
    import requests
    #下载鸢尾花数据
    url = 'http://aima.cs.berkeley.edu/data/iris.csv'
    rq = requests.get(url,timeout=20)
    f = open('iris.csv', 'w')
    f.write(rq.text)
    f.close()
    #
    from pylab import plot,show,figure,subplot
    data = genfromtxt('iris.csv',delimiter=',',usecols=(1,3))#任选两种特征绘图直观显示分类效果
    target = genfromtxt('iris.csv',delimiter=',',usecols=(4),dtype=str)
    #
    gnb = GaussianNB(data,target)
    print('特征个数 :',gnb.FeatureCount)
    for i in range(0,len(gnb.MyClasses)):
        print('种类 :',gnb.MyClasses[i])
        for j in range(0,gnb.FeatureCount):
            print(' 特征',j+1,'的均值与标准差:')
            print(' ',gnb.EtaAndSigma[i][j])

    for i in data[target == 'setosa']:
        plot(i[0],i[1],'r+')
    for i in data[target == 'versicolor']:
        plot(i[0],i[1],'y+')
    for i in data[target == 'virginica']:
        plot(i[0],i[1],'b+')

    l=0
    w=0
    while l<8:
        l += 0.25
        w = 0
        while w<7:
            w += 0.25
            r = gnb.Result([l,w,l,w])[0]
            p = gnb.Result([l,w,l,w])[1]
            if(r == 'setosa'):
                plot(l,w,'rx')
            if(r == 'versicolor'):
                plot(l,w,'yx')
            if(r == 'virginica'):
                plot(l,w,'bx')
    show()
